{"version":3,"sources":["config.js","components/RegisterForm.js","components/GameStatus.js","components/Turn.js","components/ShootButton.js","App.js","reportWebVitals.js","index.js"],"names":["ADDRESS","ABI","RegisterForm","state","handleSubmit","bind","event","preventDefault","web3","Web3","givenProvider","eth","getAccounts","then","accounts","Contract","methods","register","send","from","value","onSubmit","this","type","React","Component","GameStatus","finished","isFinished","call","res","setState","events","GameOver","on","window","alert","returnValues","loser","checkStatus","isItOver","Turn","turn","getTurn","result","checkTurn","ShootButton","shoot","catch","error","App","network","loadBlockchainData","a","net","getNetworkType","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.82703ecf.chunk.js","sourcesContent":["export const ADDRESS = \"0x9f42ce3053450F34fa51a8f4fB7D0E403368390a\"\r\nexport const ABI = [\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"constructor\"\r\n\t},\r\n\t{\r\n\t\t\"anonymous\": false,\r\n\t\t\"inputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"indexed\": false,\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"loser\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"name\": \"GameOver\",\r\n\t\t\"type\": \"event\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"getTurn\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"address\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"address\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"isFinished\",\r\n\t\t\"outputs\": [\r\n\t\t\t{\r\n\t\t\t\t\"internalType\": \"bool\",\r\n\t\t\t\t\"name\": \"\",\r\n\t\t\t\t\"type\": \"bool\"\r\n\t\t\t}\r\n\t\t],\r\n\t\t\"stateMutability\": \"view\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"register\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"payable\",\r\n\t\t\"type\": \"function\"\r\n\t},\r\n\t{\r\n\t\t\"inputs\": [],\r\n\t\t\"name\": \"shoot\",\r\n\t\t\"outputs\": [],\r\n\t\t\"stateMutability\": \"nonpayable\",\r\n\t\t\"type\": \"function\"\r\n\t}\r\n]\r\n","import React from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { ABI, ADDRESS } from \"../config\";\r\nclass RegisterForm extends React.Component{\r\nconstructor(){\r\n    super()\r\n    this.state = {}\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n}\r\n\r\nhandleSubmit(event){\r\nevent.preventDefault()\r\nconst web3 = new Web3(Web3.givenProvider)\r\nweb3.eth.getAccounts().then((accounts) => {\r\n    const Roulette = new web3.eth.Contract(ABI, ADDRESS)\r\n    Roulette.methods.register().send({from : accounts[0], value : 0.5 * 10 ** 18 }).then(() =>{\r\n     \r\n    })\r\n})\r\n}\r\n\r\nrender(){\r\n    return(\r\n        <form onSubmit = {this.handleSubmit}>\r\n            <button type = \"submit\">Register!</button>\r\n        </form>\r\n    )\r\n    }\r\n}\r\n\r\nexport default RegisterForm","import React from \"react\";\r\nimport Web3 from \"web3\";\r\nimport {ABI , ADDRESS} from \"../config\" \r\nclass GameStatus extends React.Component{\r\nconstructor(){\r\n    super()\r\n    this.state = {\r\n        finished : false \r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n}\r\n\r\ncheckStatus(){\r\n    const web3 = new Web3(Web3.givenProvider)\r\n    web3.eth.getAccounts().then((accounts) => {\r\n        const Roulette = new web3.eth.Contract(ABI, ADDRESS)\r\n        Roulette.methods.isFinished().call({from : accounts[0]}).then((res) => {\r\n            this.setState (\r\n                {\r\n                    finished : res\r\n                }\r\n            )\r\n        })\r\n    })\r\n}\r\n\r\nisItOver(){\r\n    const web3 = new Web3(Web3.givenProvider)\r\n    const Roulette = new web3.eth.Contract(ABI, ADDRESS)\r\n    Roulette.events.GameOver().on('data', event => {\r\n        window.alert(\"game is over,\" + event.returnValues.loser + \" has lost\")})\r\n}\r\nhandleSubmit(event){\r\n    event.preventDefault()\r\n    this.checkStatus()\r\n}\r\n\r\nrender(){\r\n    this.isItOver()\r\n    if(this.state.finished){\r\n\r\n    return (\r\n     <div>Game is over!, refresh and register to start a new one</div>   \r\n    )\r\n    }\r\n    else {\r\n        return (\r\n            <div>\r\n            <form onSubmit = {this.handleSubmit}> \r\n                <button type = \"submit\">\r\n                    Check game status\r\n                </button>\r\n            </form>\r\n            <div>Game is still on</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n}\r\n\r\nexport default GameStatus","import React from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { ABI, ADDRESS } from \"../config\";\r\n\r\nclass Turn extends React.Component{\r\nconstructor(){\r\n    super()\r\n    this.state = {\r\n        turn : \"\"\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n}\r\n\r\ncheckTurn(){\r\n    const web3 = new Web3(Web3.givenProvider)\r\n    web3.eth.getAccounts().then ((accounts) => {\r\n        const Roulette = new web3.eth.Contract(ABI, ADDRESS)\r\n        Roulette.methods.getTurn().call({from : accounts[0]}).then((result) => {\r\n            this.setState({\r\n                turn : result\r\n            })\r\n        })\r\n    })\r\n}\r\n\r\nhandleSubmit(event){\r\nevent.preventDefault()\r\nthis.checkTurn()\r\n\r\n}\r\n\r\nrender(){\r\n    //this.checkTurn()\r\n    return (\r\n        <div>\r\n        <form onSubmit = {this.handleSubmit}>\r\n            <button type = \"submit\">\r\n                Check turn\r\n            </button>\r\n        </form>    \r\n        <div>it is player {this.state.turn}'s Turn</div>\r\n        </div>\r\n    )\r\n}\r\n}\r\nexport default Turn","import React from \"react\";\r\nimport Web3 from \"web3\";\r\nimport { ABI, ADDRESS } from \"../config\";\r\n\r\nclass ShootButton extends React.Component{\r\nconstructor(){\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n}\r\n\r\nhandleSubmit(event) {\r\nevent.preventDefault()\r\nconst web3 = new Web3(Web3.givenProvider)\r\nweb3.eth.getAccounts().then((accounts) => {\r\n    const Roulette = new web3.eth.Contract(ABI, ADDRESS)\r\n    Roulette.methods.shoot().send({from : accounts[0]}).then(() => {}).catch((error) => \r\n    {window.alert(\"An error happened, please shoot again\")})\r\n})\r\n}\r\n\r\nrender(){\r\n    return(\r\n        <form onSubmit = {this.handleSubmit}>\r\n            <button type = \"submit\">Shoot!</button>\r\n        </form>\r\n    )\r\n}\r\n}\r\nexport default ShootButton\r\n","import React from 'react';\nimport './App.css';\nimport Web3 from 'web3';\nimport RegisterForm from './components/RegisterForm';\nimport GameStatus from './components/GameStatus';\nimport Turn from './components/Turn';\nimport ShootButton from './components/ShootButton';\n\nclass App extends React.Component {\n  constructor (){\n    super()\n    this.state = {\n      network : \"\"\n    }\n  }\n\n  componentDidMount() {\n    this.loadBlockchainData();\n  }\n\n  async loadBlockchainData(){\n    const web3 = new Web3(Web3.givenProvider)\n    let net;\n    await web3.eth.net.getNetworkType().then((result) => {\n      net = result;\n    })\n    this.setState({\n      network : net \n    })\n  }\n\n  render(){\n  return (\n    <div className=\"App\">\n    <h1>Welcome to your possibly last game!</h1>\n    <h2>You are on network : {this.state.network}</h2>\n    <RegisterForm/>\n    <br/>\n    <br/>\n    <GameStatus/>\n    <br/>\n    <Turn/>\n    <br/>\n    <ShootButton/>\n    </div>\n  );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}